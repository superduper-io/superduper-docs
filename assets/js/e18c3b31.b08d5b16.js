"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[6101],{8891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var r=n(4848),s=n(8453);const i={},c=void 0,d={id:"api/components/vector_index",title:"vector_index",description:"superduper.components.vector_index",source:"@site/versioned_docs/version-0.7/api/components/vector_index.md",sourceDirName:"api/components",slug:"/api/components/vector_index",permalink:"/docs/api/components/vector_index",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/versioned_docs/version-0.7/api/components/vector_index.md",tags:[],version:"0.7",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"template",permalink:"/docs/api/components/template"},next:{title:"annotations",permalink:"/docs/api/misc/annotations"}},o={},a=[{value:"<code>ibatch</code>",id:"ibatch",level:2},{value:"<code>VectorIndex</code>",id:"vectorindex",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.code,{children:"superduper.components.vector_index"})})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/superduper-io/superduper/blob/main/superduper/components/vector_index.py",children:"Source code"})}),"\n",(0,r.jsx)(t.h2,{id:"ibatch",children:(0,r.jsx)(t.code,{children:"ibatch"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"ibatch(iterable: Iterable[~T],\n     batch_size: int) -> Iterator[List[~T]]\n"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"iterable"}),(0,r.jsx)(t.td,{children:"the iterable to batch"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"batch_size"}),(0,r.jsx)(t.td,{children:"the number of groups to write"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["Batch an iterable into chunks of size ",(0,r.jsx)(t.code,{children:"batch_size"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"vectorindex",children:(0,r.jsx)(t.code,{children:"VectorIndex"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"VectorIndex(self,\n     identifier: str,\n     upstream: Optional[List[ForwardRef('Component')]] = None,\n     compute_kwargs: Dict = <factory>,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     *,\n     cdc_table: str = '',\n     indexing_listener: superduper.components.listener.Listener,\n     compatible_listener: Optional[superduper.components.listener.Listener] = None,\n     measure: str = 'cosine',\n     metric_values: Optional[Dict] = <factory>) -> None\n"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"identifier"}),(0,r.jsx)(t.td,{children:"Identifier of the instance."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"upstream"}),(0,r.jsx)(t.td,{children:"A list of upstream components."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"compute_kwargs"}),(0,r.jsx)(t.td,{children:"Keyword arguments to manage the compute environment."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"db"}),(0,r.jsx)(t.td,{children:"Datalayer instance. Datalayer instance."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"cdc_table"}),(0,r.jsx)(t.td,{children:"Table to use for CDC"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"indexing_listener"}),(0,r.jsx)(t.td,{children:"Listener which is applied to created vectors"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"compatible_listener"}),(0,r.jsx)(t.td,{children:"Listener which is applied to vectors to be compared"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"measure"}),(0,r.jsx)(t.td,{children:"Measure to use for comparison"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"metric_values"}),(0,r.jsx)(t.td,{children:"Metric values for this index"})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"A component carrying the information to apply a vector index."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>d});var r=n(6540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);