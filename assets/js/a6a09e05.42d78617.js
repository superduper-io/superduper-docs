"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[4402],{7270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>r});var a=n(4848),s=n(8453);const i={},o="Creating custom templates",l={id:"customize/template",title:"Creating custom templates",description:"Read about the Template component here.",source:"@site/docs/customize/template.md",sourceDirName:"customize",slug:"/customize/template",permalink:"/docs/customize/template",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/docs/customize/template.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Change data capture",permalink:"/docs/customize/cdc"},next:{title:"Data integrations",permalink:"/docs/data_plugins/intro"}},p={},r=[{value:"Existing templates",id:"existing-templates",level:2},{value:"Best practices",id:"best-practices",level:2},{value:"Ship sample data with the template",id:"ship-sample-data-with-the-template",level:3},{value:"Make sure that the template builds, without needing to apply the components",id:"make-sure-that-the-template-builds-without-needing-to-apply-the-components",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"creating-custom-templates",children:"Creating custom templates"}),"\n",(0,a.jsxs)(t.p,{children:["Read about the ",(0,a.jsx)(t.code,{children:"Template"})," component ",(0,a.jsx)(t.a,{href:"/docs/apply_api/template",children:"here"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"existing-templates",children:"Existing templates"}),"\n",(0,a.jsxs)(t.p,{children:["There are several inbult templates included in ",(0,a.jsx)(t.code,{children:"superduper"})," which you can view with"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"superduper ls\n"})}),"\n",(0,a.jsx)(t.p,{children:"To create your own template on the basis of the existing templates, run:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"superduper bootstrap <template_name> --destination <output_dir>\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Each inbuilt template directory includes a ",(0,a.jsx)(t.code,{children:"build.ipynb"})," notebook. This\nnotebook may be used to prototype your template, and work interactively.\nOnce you are ready, you may export the template with the command:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"my_template.export('.')\n"})}),"\n",(0,a.jsx)(t.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,a.jsx)(t.h3,{id:"ship-sample-data-with-the-template",children:"Ship sample data with the template"}),"\n",(0,a.jsxs)(t.p,{children:["In order to ship sample data with your template, you may provide data in\nthe ",(0,a.jsx)(t.code,{children:"default_table"})," argument. For example in the ",(0,a.jsx)(t.code,{children:"simple_rag"})," template we\nsee this command."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"from superduper import Template, Table, Schema\nfrom superduper.components.dataset import RemoteData\n\ntemplate = Template(\n    'simple_rag',\n    template=app,\n    substitutions={COLLECTION_NAME: 'table_name', OUTPUT_PREFIX: 'output_prefix', 'mongodb': 'databackend'},\n    template_variables=['table_name', 'id_field', 'output_prefix', 'databackend'],\n    default_table=Table(\n        'sample_simple_rag',\n        schema=Schema('sample_simple_rag/schema', fields={'x': 'str'}),\n        data=RemoteData(\n            'superduper-docs',\n            getter=getter,\n        )\n    ),\n    types={\n        'id_field': {\n            'type': 'str',\n            'default': '_id',\n        },\n        'llm_model': {\n            'type': 'str',\n            'choices': ['openai', 'anthropic', 'vllm', 'llamacpp'],\n            'default': 'openai',\n        },\n        'embedding_model': {\n            'type': 'str',\n            'choices': ['openai', 'sentence_transformers'],\n            'default': 'openai',\n        },\n        'table_name': {\n            'type': 'str',\n            'default': SAMPLE_COLLECTION_NAME,\n        },\n        'databackend': {\n            'type': 'str',\n            'default': 'mongodb',\n        }\n    }\n)\n"})}),"\n",(0,a.jsxs)(t.p,{children:["By wrapping the data inside a ",(0,a.jsx)(t.code,{children:"getter"})," function, use the ",(0,a.jsx)(t.code,{children:"RemoteData"})," component."]}),"\n",(0,a.jsx)(t.h3,{id:"make-sure-that-the-template-builds-without-needing-to-apply-the-components",children:"Make sure that the template builds, without needing to apply the components"}),"\n",(0,a.jsxs)(t.p,{children:["The inbult template notebooks include the parameter ",(0,a.jsx)(t.code,{children:"APPLY = True/ False"}),".\nThe notebook then toggles whether to actually apply all components with\n",(0,a.jsx)(t.code,{children:"db.apply(component)"}),". When iterating, it is useful to toggle this behaviour\nto off, so that the template may be exported quickly."]})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var a=n(6540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);