"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[6438],{9779:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var d=r(4848),s=r(8453);const t={},i=void 0,l={id:"api/base/leaf",title:"leaf",description:"superduper.base.leaf",source:"@site/docs/api/base/leaf.md",sourceDirName:"api/base",slug:"/api/base/leaf",permalink:"/docs/api/base/leaf",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/docs/api/base/leaf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"exceptions",permalink:"/docs/api/base/exceptions"},next:{title:"superduper",permalink:"/docs/api/base/superduper"}},a={},c=[{value:"<code>imported</code>",id:"imported",level:2},{value:"<code>imported_value</code>",id:"imported_value",level:2},{value:"<code>import_item</code>",id:"import_item",level:2},{value:"<code>build_uuid</code>",id:"build_uuid",level:2},{value:"<code>find_leaf_cls</code>",id:"find_leaf_cls",level:2},{value:"<code>Leaf</code>",id:"leaf",level:2},{value:"<code>Address</code>",id:"address",level:2},{value:"<code>Attribute</code>",id:"attribute",level:2},{value:"<code>Import</code>",id:"import",level:2},{value:"<code>ImportCall</code>",id:"importcall",level:2},{value:"<code>Index</code>",id:"index",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.code,{children:"superduper.base.leaf"})})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/superduper/superduper/blob/main/superduper/base/leaf.py",children:"Source code"})}),"\n",(0,d.jsx)(n.h2,{id:"imported",children:(0,d.jsx)(n.code,{children:"imported"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"imported(f)\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"f"}),(0,d.jsx)(n.td,{children:"The function or class to wrap."})]})})]}),"\n",(0,d.jsx)(n.p,{children:"Wrap a function or class to be imported."}),"\n",(0,d.jsx)(n.h2,{id:"imported_value",children:(0,d.jsx)(n.code,{children:"imported_value"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"imported_value(f)\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"f"}),(0,d.jsx)(n.td,{children:"The function or class to wrap."})]})})]}),"\n",(0,d.jsx)(n.p,{children:"Wrap a import to be serialized as a fixed value."}),"\n",(0,d.jsx)(n.h2,{id:"import_item",children:(0,d.jsx)(n.code,{children:"import_item"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"import_item(dict,\n     cls: Optional[str] = None,\n     module: Optional[str] = None,\n     object: Optional[type] = None,\n     db: Optional[ForwardRef('Datalayer')] = None)\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"dict"}),(0,d.jsx)(n.td,{children:"Dictionary of parameters."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cls"}),(0,d.jsx)(n.td,{children:"Class name."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"module"}),(0,d.jsx)(n.td,{children:"Module name."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"object"}),(0,d.jsx)(n.td,{children:"Object to instantiate."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"Import item from a cls and module specification."}),"\n",(0,d.jsx)(n.h2,{id:"build_uuid",children:(0,d.jsx)(n.code,{children:"build_uuid"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"build_uuid()\n"})}),"\n",(0,d.jsx)(n.p,{children:"Build UUID."}),"\n",(0,d.jsx)(n.h2,{id:"find_leaf_cls",children:(0,d.jsx)(n.code,{children:"find_leaf_cls"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"find_leaf_cls(full_import_path) -> Type[superduper.base.leaf.Leaf]\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"full_import_path"}),(0,d.jsx)(n.td,{children:"Full import path of the class."})]})})]}),"\n",(0,d.jsx)(n.p,{children:"Find leaf class by class full import path."}),"\n",(0,d.jsx)(n.h2,{id:"leaf",children:(0,d.jsx)(n.code,{children:"Leaf"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"Leaf(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"Base class for all leaf classes."}),"\n",(0,d.jsx)(n.h2,{id:"address",children:(0,d.jsx)(n.code,{children:"Address"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"Address(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"Address is a base class for all address classes."}),"\n",(0,d.jsx)(n.h2,{id:"attribute",children:(0,d.jsx)(n.code,{children:"Attribute"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"Attribute(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>,\n     *,\n     parent: superduper.base.leaf.Address,\n     attribute: str) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"parent"}),(0,d.jsx)(n.td,{children:"The parent class."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"attribute"}),(0,d.jsx)(n.td,{children:"The attribute to get."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"An Attribute is a class that represents an attribute of a parent class."}),"\n",(0,d.jsx)(n.h2,{id:"import",children:(0,d.jsx)(n.code,{children:"Import"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"Import(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>,\n     *,\n     import_path: str | None,\n     parent: dataclasses.InitVar[typing.Optional[typing.Any]] = None,\n     args: Optional[Tuple] = None,\n     kwargs: Optional[Dict] = None) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"import_path"}),(0,d.jsx)(n.td,{children:"The import path of the class."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"parent"}),(0,d.jsx)(n.td,{children:"The parent class."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"args"}),(0,d.jsx)(n.td,{children:"Positional arguments to pass to the class."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"kwargs"}),(0,d.jsx)(n.td,{children:"Keyword arguments to pass to the class."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"Import is a class that imports a class from a module."}),"\n",(0,d.jsx)(n.h2,{id:"importcall",children:(0,d.jsx)(n.code,{children:"ImportCall"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"ImportCall(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>,\n     *,\n     import_path: str,\n     args: Tuple = (),\n     kwargs: None = <factory>) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"import_path"}),(0,d.jsx)(n.td,{children:"The import path of the function."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"args"}),(0,d.jsx)(n.td,{children:"Positional arguments to pass to the function."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"kwargs"}),(0,d.jsx)(n.td,{children:"Keyword arguments to pass to the function."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"ImportCall is a class that imports a function from a module and calls it."}),"\n",(0,d.jsx)(n.h2,{id:"index",children:(0,d.jsx)(n.code,{children:"Index"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"Index(self,\n     identifier: str,\n     db: dataclasses.InitVar[typing.Optional[ForwardRef('Datalayer')]] = None,\n     uuid: None = <factory>,\n     *,\n     parent: superduper.base.leaf.Leaf,\n     index: int) -> None\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Parameter"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"identifier"}),(0,d.jsx)(n.td,{children:"Identifier of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"db"}),(0,d.jsx)(n.td,{children:"Datalayer instance."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"uuid"}),(0,d.jsx)(n.td,{children:"UUID of the leaf."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"parent"}),(0,d.jsx)(n.td,{children:"The parent class."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"index"}),(0,d.jsx)(n.td,{children:"The index to get."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:"An Index is a class that represents an index of a parent class."})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var d=r(6540);const s={},t=d.createContext(s);function i(e){const n=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);