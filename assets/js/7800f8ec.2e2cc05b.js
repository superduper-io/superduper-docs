"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5344],{9258:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=t(4848),o=t(8453);const r={},a="Using AI to self-referentially create Superduper components",c={id:"tutorials/auto_component",title:"Using AI to self-referentially create Superduper components",description:"In this example we create a component which can create tasks which run on Superduper.",source:"@site/versioned_docs/version-0.7/tutorials/auto_component.md",sourceDirName:"tutorials",slug:"/tutorials/auto_component",permalink:"/docs/tutorials/auto_component",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/versioned_docs/version-0.7/tutorials/auto_component.md",tags:[],version:"0.7",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Superduper-protocol",permalink:"/docs/tutorials/superduper_protocol"},next:{title:"Core superduper usage",permalink:"/docs/core_api/intro"}},i={},l=[];function p(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"using-ai-to-self-referentially-create-superduper-components",children:"Using AI to self-referentially create Superduper components"}),"\n",(0,s.jsxs)(n.p,{children:["In this example we create a component which can create tasks which run on Superduper.\nIn order to prevent the AI generating arbitrary potentially insecure code, we constrain\nthe model to only output the parameters of the target component type ",(0,s.jsx)(n.code,{children:"NewClass"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import json\nfrom litellm import completion\nfrom superduper import Component \nimport typing as t\n\n\nPROMPT = \"\"\"Here is the source code of a `superduper.Component` subclass: {name}.\n\n---\n{source_code}\n---\n\nIt is a standard dataclass, with methods which access the dataclass fields.\nThese fields are as follows:\n{fields}\n\nYour goal is to specify the fields of this dataclass in order to perform \nthe task specified in the following question, using the methods of the dataclass.\n\nThe task is specifying in the provided question.:\n\"\"\"\n\n\nclass AutoPrompt(Component):\n    schema: t.Type[Component]\n\n    @property\n    def prompt(self):\n        source_code = self.schema.source_code\n        name = self.schema.__name__\n        fields = list(self.schema.class_schema.fields.keys())\n        fields = '\\n'.join(['- ' + f for f in fields]) + '\\n'\n\n        return PROMPT.format(\n            name=name,\n            source_code=source_code,\n            fields=fields\n        )\n\n    def predict(self, question: str):\n        messages = [\n            {\n                'role': 'system',\n                'content': self.prompt,\n            },\n            {\n                'role': 'user',\n                'content': question,\n            }\n        ]\n        data = completion(\n            model='gpt-4o',\n            messages=messages,\n            response_format=self.schema.pydantic\n        ).choices[0].message.content\n\n        try:\n            data = json.loads(data)\n        except json.JSONDecodeError:\n            return None\n\n        if data.get('identifier') is None:\n            data['identifier'] = 'task'\n        \n        return self.schema(**data)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class NewClass(Component):\n    prompt: str\n    def process(self, text: str):\n        return self.llm_completion(self.prompt)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"ap = AutoPrompt('auto', schema=NewClass)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"nc = ap.predict('Create a task to extract the year from an unstructured text')\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"dict(nc.dict())\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);