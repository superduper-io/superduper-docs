"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[2743],{3752:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=t(4848),o=t(8453);const i={},r="Custom serialization",a={id:"tutorials/custom_serialization",title:"Custom serialization",description:"In this tutorial, we demonstrate how developers can flexibily and portably define",source:"@site/versioned_docs/version-0.6/tutorials/custom_serialization.md",sourceDirName:"tutorials",slug:"/tutorials/custom_serialization",permalink:"/docs/0.6/tutorials/custom_serialization",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/versioned_docs/version-0.6/tutorials/custom_serialization.md",tags:[],version:"0.6",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Training and Managing MNIST Predictions with superduper",permalink:"/docs/0.6/tutorials/training"},next:{title:"Reusable Superduper applications and templates",permalink:"/docs/0.6/tutorials/application_template"}},l={},d=[];function c(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"custom-serialization",children:"Custom serialization"}),"\n",(0,s.jsxs)(n.p,{children:["In this tutorial, we demonstrate how developers can flexibily and portably define\ntheir own classes in Superduper. These may be exported with ",(0,s.jsx)(n.code,{children:"Component.export"}),"\nand transported to other Superduper deployments with ",(0,s.jsx)(n.code,{children:"db.apply"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To make our lives difficult, we'll include a data blob in the model, which should be serialized with the\nexported class:"}),"\n",(0,s.jsxs)(n.p,{children:["We'll define our own ",(0,s.jsx)(n.code,{children:"Model"})," descendant, with a custom ",(0,s.jsx)(n.code,{children:".predict"})," method.\nWe are free to define any of our own parameters to this class with a simple annotation in the header, since ",(0,s.jsx)(n.code,{children:"Model"}),"\nis a ",(0,s.jsx)(n.code,{children:"dataclasses.dataclass"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduper import *\nimport typing as t\n\n\nclass NewModel(Model):\n    a: int = 2\n    b: t.Any\n\n    def predict(self, x):\n        return x * self.a\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If we want ",(0,s.jsx)(n.code,{children:"b"})," to be saved as a blob in the ",(0,s.jsx)(n.code,{children:"db.artifact_store"})," we can simply\nannotate this in the ",(0,s.jsx)(n.code,{children:"artifacts=..."})," parameter, supplying the serializer we would like to use:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"m = NewModel('test-hg', a=2, b=data)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can export the model:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"m.export('test-hg')\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"!cat test-hg/component.json\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"!ls test-hg/blobs/\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following cell works even after restarting the kernel.\nThat means the exported component is now completely portable!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"from superduper import *\n\nc = Component.read('test-hg')\n\nc.predict(2)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);