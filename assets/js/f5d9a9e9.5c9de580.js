"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[2577],{4897:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=t(4848),i=t(8453);const r={},o="Reusable Superduper applications",p={id:"tutorials/application_template",title:"Reusable Superduper applications",description:"The Component abstraction is designed with the aim to make superduper components easy to re-use in new scenarios.",source:"@site/docs/tutorials/application_template.md",sourceDirName:"tutorials",slug:"/tutorials/application_template",permalink:"/docs/next/tutorials/application_template",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/docs/tutorials/application_template.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom serialization",permalink:"/docs/next/tutorials/custom_serialization"},next:{title:"Superduper-protocol",permalink:"/docs/next/tutorials/superduper_protocol"}},l={},s=[{value:"Application",id:"application",level:2},{value:"Build an application",id:"build-an-application",level:3},{value:"Export application",id:"export-application",level:3},{value:"Reuse application",id:"reuse-application",level:3}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"reusable-superduper-applications",children:"Reusable Superduper applications"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Component"})," abstraction is designed with the aim to make ",(0,a.jsx)(n.code,{children:"superduper"})," components easy to re-use in new scenarios.\nIn order to do this, developers need only add the ",(0,a.jsx)(n.code,{children:"variables"})," parameter to their ",(0,a.jsx)(n.code,{children:"Component"})," implementations. ",(0,a.jsx)(n.code,{children:"superduper"})," pre-ships with\nthe ",(0,a.jsx)(n.code,{children:"Application"})," component, which includes ",(0,a.jsx)(n.code,{children:"variables"}),", as a starting point."]}),"\n",(0,a.jsxs)(n.p,{children:["During use, if an Application needs to be turned into a re-usable template, the variable values within the ",(0,a.jsx)(n.code,{children:"Application"})," can be set as parameters. When re-loading the ",(0,a.jsx)(n.code,{children:"Application"}),", new values can be filled in to create a new ",(0,a.jsx)(n.code,{children:"Application"}),", with altered state."]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"Let\u2019s take building an RAG application based on Superduper documentation as an example to demonstrate how to construct an application, as well as how to export and reuse it."}),(0,a.jsx)(n.p,{children:"At the same time, based on this application, we\u2019ll create a template and apply it to the Transformers documentation."})]}),"\n",(0,a.jsx)(n.h2,{id:"application",children:"Application"}),"\n",(0,a.jsx)(n.h3,{id:"build-an-application",children:"Build an application"}),"\n",(0,a.jsx)(n.p,{children:"Connect to a mongomock database to build the application. You can also use a real database if preferred."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from superduper import superduper\n\ndb = superduper("mongomock://test_db")\n'})}),"\n",(0,a.jsx)(n.p,{children:"Insert data containing a document\u2019s URL."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'urls = [\n    "https://docs.superduper.io/docs/intro",\n]\ndb["<var:table_name>"].insert([{"url": url} for url in urls]).execute()\n'})}),"\n",(0,a.jsx)(n.p,{children:"Install some necessary dependencies."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# !pip install unstructured langchain_text_splitters\n"})}),"\n",(0,a.jsx)(n.p,{children:"Define a model to parse the URL and convert it into a markdown-formatted document."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'def get_page(url):\n    from unstructured.partition.html import partition_html\n    from unstructured.chunking.title import chunk_by_title\n    elements = partition_html(url=url)\n    lines =[]\n    for e in elements:\n        if e.category == "Title":\n            if e.text == "tip":\n                lines.append(">> " + e.text)\n                continue\n            level = e.metadata.category_depth + 1\n            lines.append("#" * level + " " + e.text)\n        elif e.category == "ListItem":\n            lines.append("- " + e.text)\n        else:\n            lines.append(e.text)\n    \n    markdown_content = "\\n\\n".join(lines)\n    return markdown_content\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from superduper import ObjectModel, Listener\n\nmodel_page = ObjectModel(identifier="page", object=get_page)\n\nlistener_page = Listener(\n    \'page\',\n    model=model_page,\n    key="url", \n    select=db["<var:table_name>"].select()\n)\n\ndb.apply(listener_page)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Define a chunk model to parse the document and chunk it based on headers."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from langchain_text_splitters import MarkdownHeaderTextSplitter\n\ndef chunk(page):\n    headers_to_split_on = [\n        ("#", "H1"),\n        ("##", "H2"),\n        ("###", "H3"),\n    ]\n    markdown_splitter = MarkdownHeaderTextSplitter(headers_to_split_on)\n    md_header_splits = markdown_splitter.split_text(page)\n    \n    chunks = []\n    for md_header_split in md_header_splits:\n        metadata = md_header_split.metadata\n        header_text = ""\n        for tag, h in headers_to_split_on:\n            if h not in metadata:\n                continue\n            header_text += tag + " " + metadata.get(h) + "\\n"\n        chunk = header_text + md_header_split.page_content\n        chunks.append(chunk)\n    return chunks\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from superduper import ObjectModel\n\nmodel_chunk = ObjectModel(identifier="chunk", object=chunk, flatten=True)\n\nlistener_chunk = Listener(\n    "chunk",\n    model=model_chunk,\n    key=listener_page.outputs,\n    select=listener_page.outputs_select\uff0c\n)\n\ndb.apply(listener_chunk)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Use OpenAI embeddings to build a vector index."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from superduper_openai import OpenAIEmbedding\nfrom superduper import VectorIndex, Listener\n\nmodel_embedding = OpenAIEmbedding(identifier=\'text-embedding-ada-002\', datatype=\'vector[float64:1024]\')   \n\nlistener_embedding = Listener(\n    "embedding",\n    model=model_embedding,\n    key=listener_chunk.outputs,\n    select=db[listener_chunk.outputs]\uff0c\n)\n\nvector_index = VectorIndex(\n    identifier="my-index",\n    indexing_listener=listener_embedding,\n    measure="cosine"\n)\n\ndb.apply(vector_index)\n'})}),"\n",(0,a.jsx)(n.p,{children:"Define a RAG model that first performs a vector search, constructs a prompt, and then passes it to the LLM model for answer generation"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from superduper.ext.llm.prompter import *\nfrom superduper import Document\nfrom superduper.components.model import SequentialModel\nfrom superduper_openai import OpenAIChatCompletion\n\nkey = listener_chunk.outputs\n\nq = db[key].like({key: \"<var:prompt>\"}, vector_index='my-index', n=5).select()\n\ndef get_output(c):\n    c = sorted(c, key=lambda x:x['score'], reverse=True)\n    return [r[key] for r in c]\n\nprompt_template = RetrievalPrompt('my-prompt', select=q, postprocess=get_output)\nprompt_template.db = db\n\nllm = OpenAIChatCompletion('gpt-3.5-turbo')\nrag = SequentialModel('rag', models=[prompt_template, llm])\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python"})}),"\n",(0,a.jsx)(n.p,{children:"Build an application using the build_from_db method, which will automatically package all components from the database into a single application."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from superduper import Application\n\napplication = Application(\n    'doc-qa',\n    components=[rag, vector_index],\n    variables={'table_name': 'example_table'} # this signifies the default variable values.\n)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"db.apply(application)\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"rag = db.load('SequentialModel', 'rag')\n\nprint(rag.predict(\"What important additional aspects does Superduper include?\"))\n"})}),"\n",(0,a.jsx)(n.h3,{id:"export-application",children:"Export application"}),"\n",(0,a.jsxs)(n.p,{children:["We can use the ",(0,a.jsx)(n.code,{children:".export"})," function to export the application."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'application.export("exports/application")\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"!cat exports/application/component.json | jq .\n"})}),"\n",(0,a.jsx)(n.h3,{id:"reuse-application",children:"Reuse application"}),"\n",(0,a.jsx)(n.p,{children:"We connect to a new database and load the application."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from superduper import superduper\ndb = superduper("mongomock://test_db")\ndb.show()\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"from superduper import Component\n\napplication = Component.read(\"exports/application/\", table_name='new_table')\ndb.apply(application)\n"})}),"\n",(0,a.jsx)(n.p,{children:"After inserting new data, all listeners will follow the expected logic and dependency relationships to run the corresponding models on the inserted data and obtain the relevant results."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'urls = [\n    "https://docs.superduper.io/docs/intro",\n]\ndb["example_table"].insert([{"url": url} for url in urls]).execute()\n'})}),"\n",(0,a.jsx)(n.p,{children:"We can load the RAG model to perform predictions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'rag = db.load("model", "rag")\nrag.predict("What integrations does Superduper include?")\n'})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>p});var a=t(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);