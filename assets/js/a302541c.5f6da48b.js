"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[1582],{7971:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=o(4848),s=o(8453);const r={},c="Cron Job",i={id:"components/cron_job",title:"Cron Job",description:"- Iterate computations, queries and actions on a crontab",source:"@site/versioned_docs/version-0.6/components/cron_job.md",sourceDirName:"components",slug:"/components/cron_job",permalink:"/docs/components/cron_job",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/versioned_docs/version-0.6/components/cron_job.md",tags:[],version:"0.6",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CDC",permalink:"/docs/components/cdc"},next:{title:"Building custom AI with Superduper",permalink:"/docs/customize/overview"}},a={},d=[];function l(n){const e={code:"code",em:"em",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"cron-job",children:(0,t.jsx)(e.code,{children:"Cron Job"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Iterate computations, queries and actions on a crontab"}),"\n",(0,t.jsx)(e.li,{children:"Can be deployed on Superduper Enterprise"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:(0,t.jsx)(e.strong,{children:"Usage pattern"})})}),"\n",(0,t.jsxs)(e.p,{children:["Cron-job can take any actions relating to ",(0,t.jsx)(e.code,{children:"db"}),"\nwhich is loaded as an attribute of the ",(0,t.jsx)(e.code,{children:"Component"}),"."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"import datetime\nfrom superduper.components.cron_job import CronJob\n\nclass MyCronJob(CronJob):\n    table: str\n\n    # overwriting this function defines actions to be \n    # taken on a schedule\n    def run(self):\n        results = list(self.db[self.table].select())\n\n        date = str(datetime.now())\n\n        with open(f'{date}.bak', 'wb') as f:\n            json.dump(results)\n        \n        # for example, backing up a collection every day\n        os.system(f'aws s3 cp {date}.bak s3://my-bucket/{date}.bak')\n\ncron_job = MyCronJob('my_cron', table='documents', schedule='0 0 * * * *')\n\ndb.apply(cron_job)\n"})})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>c,x:()=>i});var t=o(6540);const s={},r=t.createContext(s);function c(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);