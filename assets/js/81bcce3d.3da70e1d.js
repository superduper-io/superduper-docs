"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[1938],{6838:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>s});var o=t(4848),d=t(8453);const a={},i="Eager Mode (Alpha)",r={id:"tutorials/eager_mode",title:"Eager Mode (Alpha)",description:"Eager Mode is an interactive way to build superduper applications.",source:"@site/docs/tutorials/eager_mode.md",sourceDirName:"tutorials",slug:"/tutorials/eager_mode",permalink:"/docs/tutorials/eager_mode",draft:!1,unlisted:!1,editUrl:"https://github.com/superduper-io/superduper/edit/main/docs/docs/tutorials/eager_mode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Custom serialization",permalink:"/docs/tutorials/custom_serialization"},next:{title:"Reusable Superduper applications and templates",permalink:"/docs/tutorials/application_template"}},c={},s=[];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"eager-mode-alpha",children:"Eager Mode (Alpha)"}),"\n",(0,o.jsx)(n.p,{children:"Eager Mode is an interactive way to build superduper applications."}),"\n",(0,o.jsxs)(n.p,{children:["Users can input data as usual, continuously call models, and view results.\nOnce the interactive debugging and construction are complete,\nthe corresponding data pipeline can be built directly through ",(0,o.jsx)(n.code,{children:"apply"}),",\neliminating the need for direct debugging between AI application models and databases."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"This feature is in alpha."})}),"\n",(0,o.jsx)(n.p,{children:"Connect the database and insert data."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from superduper import superduper\n\ndb = superduper('mongomock://test')\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import numpy as np\ndata = [\n    {"x": 1, "y": "2", "z": np.array([1, 2, 3])},\n    {"x": 2, "y": "3", "z": np.array([4, 5, 6])},\n    {"x": 3, "y": "4", "z": np.array([7, 8, 9])},\n]\n\ndb["documents"].insert(data).execute()\n'})}),"\n",(0,o.jsxs)(n.p,{children:["When using ",(0,o.jsx)(n.code,{children:"select.execute(eager_mode=True)"}),", all returned data will enter eager mode, which can be used for interactive model pipeline construction."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'data = list(db["documents"].select().execute(eager_mode=True))[0]\ndata\n'})}),"\n",(0,o.jsx)(n.p,{children:"Define the first model and make predictions."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from superduper import ObjectModel\ndef func_a(x):\n    return {"x": x, "model": "a"}\n\nmodel_a = ObjectModel(identifier="a", object=func_a)\noutput_a = model_a(data["x"])\noutput_a\n'})}),"\n",(0,o.jsx)(n.p,{children:"Define the second model and make predictions."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def func_b(x, y, o_a):\n    return {\n        "x": x,\n        "y": y,\n        "o_a": o_a,\n        "model": "b"\n    }\n\nmodel_b = ObjectModel(identifier="b", object=func_b)\noutput_b = model_b(data["x"], data["y"], output_a)\noutput_b\n'})}),"\n",(0,o.jsx)(n.p,{children:"Define the third model and make predictions."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def func_c(x, y, z, o_a, o_b):\n    return {\n        "x": x,\n        "y": y,\n        "z": z,\n        "o_a": o_a,\n        "o_b": o_b,\n        "model": "c",\n    }\n\nmodel_c = ObjectModel(identifier="c", object=func_c)\noutput_c = model_c(data["x"], data["y"], data["z"], output_a, output_b)\noutput_c\n'})}),"\n",(0,o.jsx)(n.p,{children:"Apply all models to the data to start monitoring the data and making predictions.\nWhen adding a model result, not only the current model but also the recursively dependent upstream models will be added."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"output_c.apply()\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'list(db["documents"].select().outputs("a", "b", "c").select().execute())\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to modify the predict_id of a specific model,\nyou can use ",(0,o.jsx)(n.code,{children:'output.predict_id = "your_predict_id"'})," to set it."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'model_predict_id = ObjectModel(identifier="c", object=func_c)\noutput_predict_id = model_predict_id(data["x"], data["y"], data["z"], output_a, output_b)\noutput_predict_id.predict_id = "new_predict_id"\noutput_predict_id.apply()\n'})}),"\n",(0,o.jsx)(n.p,{children:"View the prediction results of all data in the database."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'list(db["_outputs.new_predict_id"].select().execute())\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you want to perform if-like conditional operations to route data using different models, you can use ",(0,o.jsx)(n.code,{children:"set_condition"})," to handle it. Currently, only equals and not equals conditions are supported."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'model_condition = ObjectModel(identifier="condition", object=func_a)\noutput_condition = model_condition(data["x"])\noutput_condition.set_condition(data["x"] == 1)\noutput_condition.apply()\noutput_condition\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"db['documents'].find({}, {'x': 1, '_builds': 1, '_files': 1, '_blobs': 1, '_schema': 1}).filter({'x': 1}).execute()\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'list(db["_outputs.condition"].select().execute())\n'})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var o=t(6540);const d={},a=o.createContext(d);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);